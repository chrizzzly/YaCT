#-------------------------------------------------------------------------------
# YaCT | (c) 2015 Christian Hoppe | http://opensource.org/licenses/MIT
#-------------------------------------------------------------------------------

#Menu
menu.title.file = Datei
menu.title.new = Neu
menu.title.open = \u00d6ffnen\u2026
menu.title.close = Schlie\u00dfen
menu.title.preferences = Einstellungen\u2026
menu.title.quit = Beenden
menu.title.settings = Einstellungen
menu.title.help = Hilfe
menu.title.about = \u00dcber YaCT

#Buttons
button.NewContainer = Neuer Container
button.OpenContainer = Container \u00f6ffnen
button.CloseContainer = Container schlie\u00dfen
button.AlterContainer = Zugangsdaten \u00e4ndern
button.next = Weiter
button.cancel = Abbrechen
button.keyfile.add = Schl\u00fcsseldateien hinzuf\u00fcgen
button.closeAll = Alle schlie\u00dfen
button.save.settings = Einstellungen speichern

#Help
text.newContainerHelp = Erstellt einen neuen verschl\u00fcsselten Container auf der Festplatte. \n\nDie Algorithmen zur Verschl\u00fcsselung und die kryptographischen Hashfunktionen k\u00f6nnen einzeln ausgew\u00e4hlt werden. \n\nEin Standardcontainer wird mit AES - 256 Bit verschl\u00fcsselt.
text.openContainerHelp = \u00d6ffnet einen Container und bindet diesen in das Dateisystem ein
text.closeContainerHelp = Schlie\u00dft einen Container
text.alterContainerHelp = Zugangsdaten zu einem bestehenden Container \u00e4ndern

help.path = Der Ort des Containers auf der Festplatte
help.password = Ein sicheres Passwort sollte mindestens 12 Zeichen lang sein, aus Gro\u00df- und Kleinbuchstaben, Ziffern und Sonderzeichen bestehen.\n\nNamen, Geburtstage oder einfache Zeichenfolgen wie 12345 oder qwertz sollten NICHT verwendet werden
help.password.use = Das Passwort des Containers
help.keyfiles = Schl\u00fcsseldateien sind Dateien die zus\u00e4tzlich zum Passwort als Schl\u00fcssel verwendet werden\n\nEs werden nur die ersten 1024 Bit der Datei verwendet. Dabei ist es egal, um welche Dateien oder Dateitypen es sich handelt 
help.keyfiles.add = Schl\u00fcsseldateien hinzuf\u00fcgen\n\nEs werden nur die ersten 1024 Bit der Datei verwendet. Dabei ist es egal, um welche Dateien oder Dateitypen es sich handelt 
help.keyfiles.use = Verwendete Schl\u00fcsseldateien hinzuf\u00fcgen.\n\nOhne die bei der Erstellung verwendeten Schl\u00fcsseldateien, kann der Container nicht ge\u00f6ffnet werden!
help.standard = Einen Container mit den Standardeinstellungen erstellen.\n\nEin Standardcontainer wird mit AES - 256 Bit im Betriebsmodus XTS verschl\u00fcsselt und verwendet Whirlpool als kryptographische Hashfunktion. 
help.custom = Einen Container mit erweiterten Einstellungen erstellen.\n\nVerschl\u00fcsselungsalgorithmus, Betriebsmodus und Hashfunktion k\u00f6nnen einzeln ausgew\u00e4hlt werden.\n\nBITTE BEACHTEN SIE, DASS NICHT JEDE KOMBINATION ALS SICHER EINZUSTUFEN IST! DER BETRIEBSMODUS ECB SOLLTE NUR ZU TESTZWECKEN VERWENDET WERDEN!
help.size = Die Gr\u00f6\u00dfe des zu erstellenden Containers.\n\nVielfache der Blockgr\u00f6\u00dfe des Dateisystems werden empfohlen. Die Standardblockgr\u00f6\u00dfe f\u00fcr NTFS ist 4 KiB
help.closeOpenContainers = Schlie\u00dft die ausgew\u00e4hlten Container
help.closeAll = Schlie\u00dft ohne weitere Nachfrage alle ge\u00f6ffneten Container
help.language = Hier k\u00f6nnen Sie Ihre Sprache w\u00e4hlen
help.newContainer.step = 
help.newContainer.blocksize = Die Blockgr\u00f6\u00dfe des neuen Dateisystems
help.newContainer.fs = Die Art des neuen Dateisystems
help.progress = Der Container wird jetzt erstellt

#RadioButtons
rb.standard = Standard
rb.custom = Erweitert

#Tooltips
tooltip.standardContainer = Erstellt einen Container mit den Standardwerten
tooltip.customContainer = Erstellt einen individuellen Container 
tooltip.password = Ein sicheres Passwort sollte mindestens 12 Zeichen lang sein, aus Gro\u00df- und Kleinbuchstaben, Ziffern und Sonderzeichen bestehen.\n\nNamen, Geburtstage oder einfache Zeichenfolgen wie 12345 oder qwertz sollten NICHT verwendet werden
tooltip.password.use = Das Passwort des Containers
tooltip.path = Der Pfad, an dem sich die Datei befindet
tooltip.path.choose = W\u00e4hlen Sie den Pfad zu Ihrer Datei
tooltip.size = Die Gr\u00f6\u00dfe des zu erstellenden Containers
tooltip.size.unit = Die Einheit der Gr\u00f6\u00dfe (MB=Megabyte, GB=Gigabyte)
tooltip.algorithm = Der Verschl\u00fcsselungsalgorithmus
tooltip.hash = Die kryptografische Hashfunktion
tooltip.mode = Der Betriebsmodus der Verschl\u00fcsselung
tooltip.keyfile.list = Die verwendeten Schl\u00fcsseldateien
tooltip.keyfile.add = Schl\u00fcsseldateien hinzuf\u00fcgen
tooltip.closeAll = Alle offenen Container schlie\u00dfen\n\nVORSICHT: Es erfolgt KEINE Frage oder Best\u00e4tigung\n\nEs kann Datenverlust eintreten, wenn Schreibzugriffe noch nicht abgeschlossen sind!

#Labels
label.password = Passwort
label.password.repeat = Passwort wiederholen
label.password.now = Aktuelles Passwort
label.password.then = Neues Passwort
label.path = Pfad
label.size = Gr\u00f6\u00dfe
label.algorithm = Verschl\u00fcsselungsalgorithmus
label.hash = Hash
label.mode = Modus
label.keyfile.list = Schl\u00fcsseldateien
label.list.openContainers = Offene Container
label.password.then.repeat = Neues Passwort wiederholen
label.password.then = Neues Passwort
label.password.now = Altes Passwort
label.language = Sprache
label.fs = Dateisystem
label.blocksize = Blockgr\u00f6\u00dfe
label.iv = Initialisierungsvektor

#Links
link.about = Webseite

#About
text.about = YaCT - Yet another Crypto Tool\n\nDieses Programm entstand im Rahmen einer Bachelorarbeit an der Hochschule Kempten im Allg\u00e4u.\n\nEs verwendet JavaFX und die offene Krypto-Bibliothek BouncyCastle.\n\nYaCT | (c) 2015 Christian Hoppe | http://opensource.org/licenses/MIT

#FROM WIKIPEDIA
help.algorithm = TWOFISH ist ein symmetrischer Verschl\u00fcsselungsalgorithmus in der Informatik. Es handelt sich um eine Blockchiffre mit einer Blockgr\u00f6\u00dfe von 128 Bit und 16 Runden, die Schl\u00fcssell\u00e4ngen betragen 128, 192 oder 256 Bit.\n\nTHREEFISH ist eine sogenannte tweakable Blockverschl\u00fcssung, was bedeutet, dass \u00fcber einen zus\u00e4tzlichen Steuereingang die Art der Permutationen in gewissem Umfang ver\u00e4ndert werden kann. Der tweak hat dabei eine \u00e4hnliche Funktion wie ein Initialisierungsvektor oder ein Nonce, kann \u00f6ffentlich sein und schneller gewechselt werden als der Schl\u00fcssel.\n\nDer Advanced Encryption Standard (AES) ist eine Blockchiffre, die als Nachfolger f\u00fcr DES im Oktober 2000 vom National Institute of Standards and Technology (NIST) als Standard bekanntgegeben wurde. Der Rijndael-Algorithmus besitzt variable, voneinander unabh\u00e4ngige, Block- und Schl\u00fcssell\u00e4ngen von 128, 160, 192, 224 oder 256 Bit. Rijndael bietet ein sehr hohes Ma\u00df an Sicherheit; erst mehr als zehn Jahre nach seiner Standardisierung wurde der erste theoretisch interessante, praktisch aber nicht relevante Angriff gefunden.\n\nSERPENT ist ein symmetrischer Verschl\u00fcsselungsalgorithmus mit einer Blockgr\u00f6\u00dfe von 128 Bit und variabler Schl\u00fcsselgr\u00f6\u00dfe bis 256 Bit. Serpent wurde als hoch-sicher eingestuft und es wird angenommen, dass er der sicherste der AES Finalisten ist.
help.mode = Ein Betriebsmodus ist ein Verfahren, das beschreibt, wie mit einer Blockchiffre Nachrichten verschl\u00fcsselt werden.\n\n\u00dcblicherweise wird dazu die Nachricht in mehrere Bl\u00f6cke aufgeteilt und durch Padding auf eine passende L\u00e4nge gebracht. Ein Initialisierungsvektor kann das Verfahren zus\u00e4tzlich unabh\u00e4ngig vom verwendeten Schl\u00fcssel randomisieren.\n\n\nECB - Electronic Code Book Mode - Gleiche Nachrichtenbl\u00f6cke werden auch gleich verschl\u00fcsselt. Von der Verwendung des ECB-Modus wird abgeraten, es sei denn, es soll nur einmal ein einziger Nachrichtenblock verschl\u00fcsselt werden.\n\nCBC - Cipher Block Chaining Mode - Die Probleme des ECB k\u00f6nnen behoben werden, indem man einen Nachrichtenblock vor dem Verschl\u00fcsseln mit dem vorhergehenden Chiffratblock verkn\u00fcpft. F\u00fcr den ersten Block nimmt man hierzu einen Initialisierungsvektor. Der CBC-Modus ist wesentlich sicherer als der ECB-Modus, vor allem wenn man keine zuf\u00e4lligen Texte hat.\n\nXTS - XEX-based tweaked-codebook mode with ciphertext stealing - XTS
help.hash = RIPEMD-160 ist eine kryptographische Hashfunktion mit einer Ausgabe von 160 Bits. Da die Entwicklung von RIPEMD-160 offener war als die von SHA-1, ist es wahrscheinlicher, dass dieser Algorithmus weniger Sicherheitsl\u00fccken aufweist. Da er jedoch weniger popul\u00e4r ist, haben weniger Kryptologen versucht, Schw\u00e4chen zu finden, was wiederum die Wahrscheinlichkeit f√ºr unentdeckte Sicherheitsl\u00fccken steigen l\u00e4sst.\n\n\n\nWHIRLPOOL ist eine kryptologische Hashfunktion, die von Vincent Rijmen und Paulo S. L. M. Barreto entworfen wurde. Whirlpool funktioniert mit Dateien bis zu 2256 Bit Gr\u00f6\u00dfe und gibt einen Hash-Wert von 512 Bit aus. Bislang sind keine Schw\u00e4chen des Algorithmus bekannt, was allerdings relativiert werden muss, da er bislang wenig untersucht wurde.\n\n\n\nSHA-256 und SHA-512 (von englisch secure hash algorithm, sicherer Hash-Algorithmus) ist die Bezeichnung zweier kryptologischer Hashfunktionen, die 2001 vom US-amerikanischen NIST als Nachfolger von SHA-1 standardisiert wurden. Die Zahlen geben dabei die L\u00e4nge des Hashes an.


#NE TRANSLATION NEEDED - deprecated
label.text.drag.here = 
