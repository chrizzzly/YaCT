#-------------------------------------------------------------------------------
# YaCT | (c) 2015 Markus Hoppe | http://opensource.org/licenses/MIT
#-------------------------------------------------------------------------------

#Menu
menu.title.file = Fichier
menu.title.new = Nouveau
menu.title.open = Ouvrir
menu.title.close = Fermer
menu.title.preferences = Pr\u00E9f\u00E9rences
menu.title.quit = Quitter
menu.title.settings = Param\u00E8tres
menu.title.help = Aide
menu.title.about = \u00C0 propos de YaCT

#Buttons
button.NewContainer = Nouveau conteneur
button.OpenContainer = Ouvrir un conteneur
button.CloseContainer = Fermer le conteneur
button.AlterContainer = Changer les donn\u00E9es d'acc\u00E8s
button.next = Suivant
button.cancel = Pr\u00E9c\u00E9dent
button.keyfile.add = Ajouter des fichiers de cl\u00E9
button.closeAll = Fermer tout
button.save.settings = Enregistrer les param\u00E8tres

#Help
text.newContainerHelp = Cr\u00E9e un conteneur chiffr\u00E9 sur le disque dur.\n\nVous pouvez choisir s\u00E9par\u00E9ment l'algorithme de chiffrement, ainsi que les fonctions de hachage.\n\nLes conteneurs par d\u00E9faut utilisent AES - 256 bits.
text.openContainerHelp = Ouvre un conteneur et l'ajouter au syst\u00E8me de fichiers
text.closeContainerHelp = Ferme un coneneur
text.alterContainerHelp = Modifier les donn\u00E9es d'acc\u00E8s pour un conteneur existant

help.path = Le lieu de stockage du conteneur sur le disque dur
help.password = Un mot de passe s\u00E9cure est en moins 12 caract\u00E8res en long, contient de petits et grands caract\u00E8res, ainsi que des chiffres et caract\u00E8res sp\u00E9ciaux.\n\nLes noms, dates de naissance, ou cha\u00EEnes simples de caract\u00E8res NE constituent PAS un mot de passe s\u00E9cure. Par ex. 12345 ou azerty
help.password.use = Le mot de passe d'un conteneur
help.keyfiles = Par les fichiers de cl\u00E9, il s'agit de fichiers compl\u00E9mentaires \u00E0 un mot de passe qui sont utilis\u00E9s en tant d'une cl\u00E9.\n\nSeuls les premiers 1024 bits sont utilis\u00E9s comme cl\u00E9. Le fichier ou type de fichier n'importe pas. 
help.keyfiles.add = Ajouter des fichiers de cl\u00E9\n\nSeuls les premiers 1024 bits sont utilis\u00E9s. Le fichier ou type de fichier n'importe pas. 
help.keyfiles.use = Ajouter des fichiers de cl\u00E9 utilis\u00E9s.\n\nLe conteneur ne peut \u00EAtre overt qu'avec les fichiers de cl\u00E9 utilis\u00E9s lors de sont cr\u00E9ation&nbsp!
help.standard = Cr\u00E9er un conteneur avec les param\u00E8tres par d\u00E9faut.\n\nUn conteneur par d\u00E9faut utilise AES (256 bits), le mode XTS et Whirlpool comme fonction de hachage cryptographique. 
help.custom = Cr\u00E9er un conteneur avec des param\u00E8tres \u00E9tendus.\n\nVous pouvez s\u00E9lectionnez librement l'algorithme de chiffrement, le mode, ainsi que la fonction de hachage.\n\nVEUILLEZ NOTER QUE TOUTE COMBINAISON N'EST PAS S\U00C9CURE&nbsp! N'UTILISEZ PAS LE MODE ECB QUE POUR LES TESTS&nbsp!
help.size = La taille du conteneur \u00E0 cr\u00E9er.\n\nIl est recommand\u00E9 d'utiliser un multiple du syst\u00E8me de fichiers. La taille par défaut des blocs sous NTFS est de 4 Kio
help.closeOpenContainers = Ferme les conteneurs s\u00E9lectionn\u00E9es
help.closeAll = Ferme tous les conteneurs ouverts sans demander l'utilisateur
help.language = HierIci, vous pouvez sélectionner votre langue
help.newContainer.step = 
help.newContainer.blocksize = La taille de bloc du nouveau système de fichiers
help.newContainer.fs = Le type du nouveau système de fichiers
help.progress = Création du conteneur en cours

#RadioButtons
rb.standard = Par défaut
rb.custom = Étendu

#Tooltips
tooltip.standardContainer = Crée un nouveau conteneur avec les valeurs par défaut
tooltip.customContainer = Crée un conteneur personnalisé
tooltip.password = Un mot de passe s\u00E9cure est en moins 12 caract\u00E8res en long, contient de petits et grands caract\u00E8res, ainsi que des chiffres et caract\u00E8res sp\u00E9ciaux.\n\nLes noms, dates de naissance, ou cha\u00EEnes simples de caract\u00E8res NE constituent PAS un mot de passe s\u00E9cure. Par ex. 12345 ou azerty
tooltip.password.use = Le mot de passe du conteneur
tooltip.path = Le chemin où se trouve le fichier
tooltip.path.choose = Choisissez le chemin vers votre fichier
tooltip.size = La taille du conteneur à créer
tooltip.size.unit = L'unité de taille (Mo=mégaoctet, Go=gigaoctet)
tooltip.algorithm = L'algorithme de chiffrement
tooltip.hash = La fonction de hachage cryptographique
tooltip.mode = Le mode de chiffrement
tooltip.keyfile.list = Les fichiers de clé utilisés
tooltip.keyfile.add = Ajouter des fichiers de clé
tooltip.closeAll = Fermer tous les conteneurs ouverts\n\nATTENTION&nbsp: Il N'EST PAS affichée une demande ou une confirmation.\n\nDes données peuvent être perdues, s'il est en cours une action d'écriture&nbsp!

#Labels
label.password = Mot de passe
label.password.repeat = Répéter le mot de passe
label.password.now = Mot de passe actuel
label.password.then = Nouveau mot de passe
label.path = Chemin
label.size = Taille
label.algorithm = Algorithme de chiffrement
label.hash = Hachage
label.mode = Mode
label.keyfile.list = Fichiers de clé
label.list.openContainers = Conteneurs ouverts
label.password.then.repeat = Répéter le nouveau mot de passe
label.password.then = Nouveau mot de passe
label.password.now = Ancien mot de passe
label.language = Langue
label.fs = Système de fichiers
label.blocksize = Taille des blocs
label.iv = Vecteur d'initialisation

#Links
link.about = Site Web

#About
text.about = YaCT - Yet another Crypto Tool\n\nCe logiciel était développé dans le cadre d'une thèse à l'Université de Kempten, Allg\u00e4u, Allemagne.\n\nLe logiciel emploit JavaFX ainsi que la libraire publique de chiffrement «&nbspBouncyCastle&nbsp».\n\nYaCT | (c) 2015 Christian Hoppe | http://opensource.org/licenses/MIT

#FROM WIKIPEDIA
help.algorithm = Twofish est un algorithme de chiffrement symétrique par bloc inventé et analysé par Bruce Schneier, Niels Ferguson, John Kelsey, Doug Whiting, David Wagner et Chris Hall. Il chiffre des blocs de 128 bits avec une clé de 128, 192 ou 256 bits.\n\nTHREEFISH est une mise à jour de l'algorithme Twofish.\n\nAdvanced Encryption Standard ou AES (soit « standard de chiffrement avancé » en français), aussi connu sous le nom de Rijndael, est un algorithme de chiffrement symétrique. Il remporta en octobre 2000 le concours AES, lancé en 1997 par le NIST et devint le nouveau standard de chiffrement\n\nSERPENT ist ein symmetrischer Verschl\u00fcsselungsalgorithmus mit einer Blockgr\u00f6\u00dfe von 128 Bit und variabler Schl\u00fcsselgr\u00f6\u00dfe bis 256 Bit. Serpent wurde als hoch-sicher eingestuft und es wird angenommen, dass er der sicherste der AES Finalisten ist.
help.mode = En cryptographie, un mode d'opération est la manière de traiter les blocs de texte clairs et chiffrés au sein d'un algorithme de chiffrement par bloc. Historiquement, les modes d'opération ont été abondamment étudiés pour leur propriétés de propagation d'erreurs lors de divers scénarios de modification de données durant le chiffrement. Les développements suivants ont considéré que la protection de l'intégrité était un objectif à atteindre par des moyens complètement différents. Mais aujourd'hui il existe des modes d'opérations qui associent chiffrement et authentification de manière efficace.
help.hash = L'algorithme de hachage RIPEMD-160, pour RACE Integrity Primitives Evaluation Message Digest, est une fonction de hachage qui produit une signature de 160 bits.\n\n\n\nWhirlpool est une fonction de hachage cryptographique conçue par Vincent Rijmen et Paulo Barreto pour le projet NESSIE. Elle a été nommée d'après la galaxie M51. La fonction utilise une architecture de type Miyaguchi-Preneel connue pour sa résistance à la cryptanalyse, cette structure produit des empreintes de 512 bits qui à l'heure actuelle sont assez rares (citons toutefois SHA-512). En interne, l'algorithme travaille sur 512 bits grâce à une fonction similaire à celle de l'algorithme de chiffrement symétrique AES (auquel Vincent Rijmen a également participé et qui à l'origine s'appelle Rijndael). L'utilisation d'une version modifiée du bloc de chiffrage de AES (appelée W) garantit un système robuste et fiable.\n\n\n\nSHA-2 (Secure Hash Algorithm) est une famille de fonctions de hachage qui ont été conçues par la National Security Agency des États-Unis (NSA), sur le modèle des fonctions SHA-1 et SHA-0, elles-mêmes fortement inspirées de la fonction MD4 de Ron Rivest (qui a donné parallèlement MD5). Telle que décrite par le National Institute of Standards and Technology (NIST), elle comporte les fonctions, SHA-256 et SHA-512 dont les algorithmes sont similaires mais opèrent sur des tailles de mot différentes (32 bits pour SHA-256 et 64 bits pour SHA-512).


#NE TRANSLATION NEEDED - deprecated
label.text.drag.here = 
